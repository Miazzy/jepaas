<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <welcome-file-list>
        <welcome-file>/index.html</welcome-file>
    </welcome-file-list>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>jeplus.webapp</param-value>
    </context-param>

    <!-- 规定配置文件的访问地址 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:beans.xml
        </param-value>
    </context-param>
    <context-param>
        <param-name>logbackConfigLocation</param-name>
        <param-value>classpath:logback.xml</param-value>
    </context-param>
    <listener>
        <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
    </listener>

    <!--启用spring的监听器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>
    </listener>
    <!-- 系统环境变量 -->
    <listener>
        <listener-class>com.je.core.listener.SysContextListener</listener-class>
    </listener>

    <!-- 配置spring的编码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 利用spring管理session的关闭-->
    <filter>
        <filter-name>openSessionInView</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sf</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>openSessionInView</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 解密过滤器，用于解密参数 -->
    <filter>
        <filter-name>decryptFilter</filter-name>
        <filter-class>com.je.core.filter.DecryptFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>decryptFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 过滤器处理登陆用户 -->
    <filter>
        <filter-name>sessionFilter</filter-name>
        <filter-class>com.je.core.filter.SessionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>sessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--失效时间设为2个小时-->
    <session-config>
        <session-timeout>10000</session-timeout>
    </session-config>
    <!-- xfire -->
    <servlet>
        <servlet-name>xfire</servlet-name>
        <servlet-class>
            org.codehaus.xfire.transport.http.XFireConfigurableServlet
        </servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>xfire</servlet-name>
        <url-pattern>/servlet/XFireServlet/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>xfire</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

    <!-- 图表 -->
    <servlet>
        <display-name>FCExporter</display-name>
        <servlet-name>FCExporter</servlet-name>
        <servlet-class>com.je.report.servlet.FCExporter</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FCExporter</servlet-name>
        <url-pattern>/FCExporter</url-pattern>
    </servlet-mapping>
    <!-- 图表 End -->

    <!-- 配置DispatchcerServlet -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>com.je.core.base.PlatformDispatcherServlet</servlet-class>
        <!-- 配置Spring mvc下的配置文件的位置和名称 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- PageOffice Begin -->
    <servlet>
        <servlet-name>poserver</servlet-name>
        <servlet-class>com.zhuozhengsoft.pageoffice.poserver.Server</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/poserver.do</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/poserver.zz</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/pageoffice.cab</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/popdf.cab</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/sealsetup.exe</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/posetup.exe</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/pageoffice.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>poserver</servlet-name>
        <url-pattern>/pobstyle.css</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>adminseal</servlet-name>
        <servlet-class>com.zhuozhengsoft.pageoffice.poserver.AdminSeal</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>adminseal</servlet-name>
        <url-pattern>/adminseal.zz</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>adminseal</servlet-name>
        <url-pattern>/loginseal.zz</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>adminseal</servlet-name>
        <url-pattern>/sealimage.zz</url-pattern>
    </servlet-mapping>
    <mime-mapping>
        <extension>mht</extension>
        <mime-type>message/rfc822</mime-type>
    </mime-mapping>
    <context-param>
        <param-name>adminseal-password</param-name>
        <param-value>111111</param-value>
    </context-param>
    <!--mysql配置用-->
    <!--<context-param>-->
    <!--<param-name>adminseal-charset</param-name>-->
    <!--<param-value>UTF-8</param-value>-->
    <!--</context-param>-->
    <!--<context-param>-->
    <!--<param-name>posealdb-driver</param-name>-->
    <!--<param-value>com.mysql.jdbc.Driver</param-value>-->
    <!--</context-param>-->
    <!--<context-param>-->
    <!--<param-name>posealdb-url</param-name>-->
    <!--<param-value>jdbc:mysql://rm-2zei58w9w8i4cwjvydo.mysql.rds.aliyuncs.com:3306/garlic??useUnicode=true&amp;characterEncoding=UTF-8</param-value>-->
    <!--</context-param>-->
    <!--<context-param>-->
    <!--<param-name>posealdb-username</param-name>-->
    <!--<param-value>garlic</param-value>-->
    <!--</context-param>-->
    <!--<context-param>-->
    <!--<param-name>posealdb-password</param-name>-->
    <!--<param-value>garlic1@#</param-value>-->
    <!--</context-param>-->
    <!-- PageOffice End -->
</web-app>